{"$message_type":"diagnostic","message":"unused imports: `Result` and `TensorError`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"tensr-gpu/src/tensor_gpu.rs","byte_start":61,"byte_end":67,"line_start":4,"line_end":4,"column_start":13,"column_end":19,"is_primary":true,"text":[{"text":"    error::{Result, TensorError},","highlight_start":13,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"tensr-gpu/src/tensor_gpu.rs","byte_start":69,"byte_end":80,"line_start":4,"line_end":4,"column_start":21,"column_end":32,"is_primary":true,"text":[{"text":"    error::{Result, TensorError},","highlight_start":21,"highlight_end":32}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"`#[warn(unused_imports)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"remove the unused imports","code":null,"level":"help","spans":[{"file_name":"tensr-gpu/src/tensor_gpu.rs","byte_start":53,"byte_end":87,"line_start":4,"line_end":5,"column_start":5,"column_end":5,"is_primary":true,"text":[{"text":"    error::{Result, TensorError},","highlight_start":5,"highlight_end":34},{"text":"    tensor::compute_strides,","highlight_start":1,"highlight_end":5}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null},{"file_name":"tensr-gpu/src/tensor_gpu.rs","byte_start":47,"byte_end":53,"line_start":3,"line_end":4,"column_start":17,"column_end":5,"is_primary":true,"text":[{"text":"use tensr_core::{","highlight_start":17,"highlight_end":18},{"text":"    error::{Result, TensorError},","highlight_start":1,"highlight_end":5}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null},{"file_name":"tensr-gpu/src/tensor_gpu.rs","byte_start":110,"byte_end":113,"line_start":5,"line_end":6,"column_start":28,"column_end":2,"is_primary":true,"text":[{"text":"    tensor::compute_strides,","highlight_start":28,"highlight_end":29},{"text":"};","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused imports: `Result` and `TensorError`\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mtensr-gpu/src/tensor_gpu.rs:4:13\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m4\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    error::{Result, TensorError},\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m             \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: `#[warn(unused_imports)]` on by default\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unused variable: `a`","code":{"code":"unused_variables","explanation":null},"level":"warning","spans":[{"file_name":"tensr-gpu/src/backend.rs","byte_start":192,"byte_end":193,"line_start":10,"line_end":10,"column_start":34,"column_end":35,"is_primary":true,"text":[{"text":"    fn matmul<T: Copy + Default>(a: &Self::Tensor<T>, b: &Self::Tensor<T>) -> Self::Tensor<T> {","highlight_start":34,"highlight_end":35}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"`#[warn(unused_variables)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"if this is intentional, prefix it with an underscore","code":null,"level":"help","spans":[{"file_name":"tensr-gpu/src/backend.rs","byte_start":192,"byte_end":193,"line_start":10,"line_end":10,"column_start":34,"column_end":35,"is_primary":true,"text":[{"text":"    fn matmul<T: Copy + Default>(a: &Self::Tensor<T>, b: &Self::Tensor<T>) -> Self::Tensor<T> {","highlight_start":34,"highlight_end":35}],"label":null,"suggested_replacement":"_a","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused variable: `a`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mtensr-gpu/src/backend.rs:10:34\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m10\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\u001b[0matmul<T: Copy + Default>(a: &Self::Tensor<T>, b: &Self::Tensor<\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                             \u001b[0m\u001b[0m\u001b[1m\u001b[33m^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: if this is intentional, prefix it with an underscore: `_a`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: `#[warn(unused_variables)]` on by default\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unused variable: `b`","code":{"code":"unused_variables","explanation":null},"level":"warning","spans":[{"file_name":"tensr-gpu/src/backend.rs","byte_start":213,"byte_end":214,"line_start":10,"line_end":10,"column_start":55,"column_end":56,"is_primary":true,"text":[{"text":"    fn matmul<T: Copy + Default>(a: &Self::Tensor<T>, b: &Self::Tensor<T>) -> Self::Tensor<T> {","highlight_start":55,"highlight_end":56}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"if this is intentional, prefix it with an underscore","code":null,"level":"help","spans":[{"file_name":"tensr-gpu/src/backend.rs","byte_start":213,"byte_end":214,"line_start":10,"line_end":10,"column_start":55,"column_end":56,"is_primary":true,"text":[{"text":"    fn matmul<T: Copy + Default>(a: &Self::Tensor<T>, b: &Self::Tensor<T>) -> Self::Tensor<T> {","highlight_start":55,"highlight_end":56}],"label":null,"suggested_replacement":"_b","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused variable: `b`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mtensr-gpu/src/backend.rs:10:55\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m10\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\u001b[0mlt>(a: &Self::Tensor<T>, b: &Self::Tensor<T>) -> Self::Tensor<T> {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                             \u001b[0m\u001b[0m\u001b[1m\u001b[33m^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: if this is intentional, prefix it with an underscore: `_b`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"3 warnings emitted","code":null,"level":"warning","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: 3 warnings emitted\u001b[0m\n\n"}
